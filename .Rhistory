}
individuals <- plot_grid(plotlist = plots, ncol = 4, nrow = 3)
(list(individuals, plot, "Individual Performance" = RaRb, "Portfolio Performance" = RaRc))
}
krause(from="2017-01-01", period="weekly", index="SPY")
krause <- function(from, period, index) {
cal          <- create.calendar(name = "cal", weekdays = c("saturday", "sunday"))
date         <- preceding(Sys.Date(), cal)
symbols      <- c("ALGN", "BA", "CMI", "FLIR", "FNB", "GOOGL", "NFLX", "PXD", "STZ", "TMUS")
quote        <- (getQuote(symbols, src = "yahoo"))$Last
shares       <- c(245, 115.56465, 236.90199, 1117.84436, 3817.46965, 63, 210, 170, 210.75283, 530.0)
market.value <- (shares * quote)
total.mv     <- sum(market.value)
weights      <- market.value / (total.mv + 1880.18) # Weights do not sum to 1 due to unfactored money market investments
# Gather adjusted returns for each individual stock
stock.returns <- (tq_get(symbols,
get   = "stock.prices",
from  = from,
to    = date) %>%
group_by(symbol) %>%
tq_transmute(select     = adjusted,
mutate_fun = periodReturn,
period     = period,
col_rename = "Ra"))
# Gather adjusted index returns
index.returns <- (tq_get(index,
get   = "stock.prices",
from  = from,
to    = date) %>%
tq_transmute(select     = adjusted,
mutate_fun = periodReturn,
period     = period,
col_rename = "Rb"))
# Aggregate individual stocks into a portfolio; suppress warnings for weights not summing to 1
portfolio.returns <- suppressWarnings(((stock.returns %>%
tq_portfolio(assets_col  = symbol,
returns_col = Ra,
weights     = weights,
col_rename  = "Rc"))))
# Gather performance of each individual stocks compared to index
RaRb <- (left_join(stock.returns, index.returns, by = "date") %>%
tq_performance(Ra = Ra,
Rb = Rb,
performance_fun = table.CAPM))
# Gather performance of whole portfolio compared to index
RaRc <- (left_join(portfolio.returns, index.returns, by = "date") %>%
tq_performance(Ra = Rc,
Rb = Rb,
performance_fun = table.CAPM))
# Plot portfolio returns
plot <- (add_column(portfolio.returns,  sign = ifelse(portfolio.returns[["Rc"]] >= 0, "positive", "negative")) %>%
ggplot(aes(x = date, y = Rc, fill = sign)) +
geom_bar(stat = "identity", color = "black", alpha = 1, na.rm = TRUE) +
scale_fill_manual(values = c("positive" = "green", "negative" = "red")) +
guides(fill = FALSE) +
labs(title    = paste("Portfolio",
paste(toupper(substring(period, 1, 1)), substring(period, 2), sep = "", collapse = " "),
"Returns - The Krause Fund"),
x        = "",
y        = paste(paste(toupper(substring(period, 1, 1)), substring(period, 2), sep = "", collapse = " "),
"Returns (%)")) +
geom_smooth(inherit.aes = FALSE, aes(x = date, y = Rc), method = "loess", level = FALSE, na.rm = TRUE,
size = 1.5, color = "orange1") +
theme(panel.background = element_rect(fill   = "black",
colour = "black",
size   = 0.5, linetype = "solid"),
panel.grid.major = element_line(size = 0.5, linetype = 'solid', colour = "gray50"),
panel.grid.minor = element_line(size = 0.25, linetype = 'solid', colour = "gray50")) +
geom_hline(aes(yintercept = 0), color = "ghostwhite", size = 0.8))
#scale_color_tq() +
#scale_y_continuous(labels = scales::percent))
# Plot individual stock returns
new.stock.returns <- add_column(stock.returns,  sign = ifelse(stock.returns[["Ra"]] >= 0, "positive", "negative"))
stock.list <- unique(new.stock.returns$symbol)
plots <- list()
for (i in seq_along(stock.list)) {
ggplot <-
(ggplot(subset(new.stock.returns, new.stock.returns$symbol == stock.list[i]),
aes(x = date, y = Ra)) +
geom_bar(stat = "identity", color = "black", alpha = 1, na.rm = TRUE) +
scale_fill_manual(values = c("positive" = "green", "negative" = "red")) +
labs(title = stock.list[i],
x = "", y = "") +
geom_smooth(inherit.aes = FALSE, aes(x = date, y = Ra), method = "loess", level = FALSE, na.rm = TRUE,
size = 1, color = "orange1") +
theme(panel.background = element_rect(fill   = "black",
colour = "black",
size   = 0.5, linetype = "solid"),
panel.grid.major = element_line(size = 0.5, linetype = 'solid', colour = "gray50"),
panel.grid.minor = element_line(size = 0.25, linetype = 'solid', colour = "gray50")) +
geom_hline(aes(yintercept = 0), color = "yellow", size = 0.8))
plots[[i]] <- ggplot
}
individuals <- plot_grid(plotlist = plots, ncol = 4, nrow = 3)
(list(individuals, plot, "Individual Performance" = RaRb, "Portfolio Performance" = RaRc))
}
krause(from="2017-01-01", period="weekly", index="SPY")
aapl.returns <- (tq_get("AAPL",
get   = "stock.prices",
from  = "2018-01-01",
to    = "2018-10-30") %>%
tq_transmute(select     = adjusted,
mutate_fun = periodReturn,
period     = "weekly",
col_rename = "Ra"))
ggplot(aapl.returns, aes(x = date, y = Ra)) +
geom_line(size = 1) +
labs(title = "Returns",
x = "", y = "Returns") +
geom_smooth(method = "loess") +
theme_tq()
new.aapl.returns <- add_column(aapl.returns,  sign = ifelse(aapl.returns[["Ra"]] >= 0, "positive", "negative"))
aapl.returns
new.aapl.returns
stock.list <- unique(new.aapl.returns$symbol)
symbols      <- c("ALGN", "BA", "CMI", "FLIR", "FNB", "GOOGL", "NFLX", "PXD", "STZ", "TMUS")
stock.returns <- (tq_get(symbols,
get   = "stock.prices",
from  = from,
to    = date) %>%
group_by(symbol) %>%
tq_transmute(select     = adjusted,
mutate_fun = periodReturn,
period     = period,
col_rename = "Ra"))
stock.returns <- (tq_get(symbols,
get   = "stock.prices",
from  = "2017-01-01",
to    = "2018-10-30") %>%
group_by(symbol) %>%
tq_transmute(select     = adjusted,
mutate_fun = periodReturn,
period     = period,
col_rename = "Ra"))
stock.returns <- (tq_get(symbols,
get   = "stock.prices",
from  = "2017-01-01",
to    = "2018-10-30") %>%
group_by(symbol) %>%
tq_transmute(select     = adjusted,
mutate_fun = periodReturn,
period     = "weekly",
col_rename = "Ra"))
stock.returns
new.stock.returns <- add_column(stock.returns,  sign = ifelse(stock.returns[["Ra"]] >= 0, "positive", "negative"))
new.stock.returns
stock.list <- unique(new.stock.returns$symbol)
stock.list
krause <- function(from, period, index) {
cal          <- create.calendar(name = "cal", weekdays = c("saturday", "sunday"))
date         <- preceding(Sys.Date(), cal)
symbols      <- c("ALGN", "BA", "CMI", "FLIR", "FNB", "GOOGL", "NFLX", "PXD", "STZ", "TMUS")
quote        <- (getQuote(symbols, src = "yahoo"))$Last
shares       <- c(245, 115.56465, 236.90199, 1117.84436, 3817.46965, 63, 210, 170, 210.75283, 530.0)
market.value <- (shares * quote)
total.mv     <- sum(market.value)
weights      <- market.value / (total.mv + 1880.18) # Weights do not sum to 1 due to unfactored money market investments
# Gather adjusted returns for each individual stock
stock.returns <- (tq_get(symbols,
get   = "stock.prices",
from  = from,
to    = date) %>%
group_by(symbol) %>%
tq_transmute(select     = adjusted,
mutate_fun = periodReturn,
period     = period,
col_rename = "Ra"))
# Gather adjusted index returns
index.returns <- (tq_get(index,
get   = "stock.prices",
from  = from,
to    = date) %>%
tq_transmute(select     = adjusted,
mutate_fun = periodReturn,
period     = period,
col_rename = "Rb"))
# Aggregate individual stocks into a portfolio; suppress warnings for weights not summing to 1
portfolio.returns <- suppressWarnings(((stock.returns %>%
tq_portfolio(assets_col  = symbol,
returns_col = Ra,
weights     = weights,
col_rename  = "Rc"))))
# Gather performance of each individual stocks compared to index
RaRb <- (left_join(stock.returns, index.returns, by = "date") %>%
tq_performance(Ra = Ra,
Rb = Rb,
performance_fun = table.CAPM))
# Gather performance of whole portfolio compared to index
RaRc <- (left_join(portfolio.returns, index.returns, by = "date") %>%
tq_performance(Ra = Rc,
Rb = Rb,
performance_fun = table.CAPM))
# Plot portfolio returns
plot <- (add_column(portfolio.returns,  sign = ifelse(portfolio.returns[["Rc"]] >= 0, "positive", "negative")) %>%
ggplot(aes(x = date, y = Rc, fill = sign)) +
geom_bar(stat = "identity", color = "black", alpha = 1, na.rm = TRUE) +
scale_fill_manual(values = c("positive" = "green", "negative" = "red")) +
guides(fill = FALSE) +
labs(title    = paste("Portfolio",
paste(toupper(substring(period, 1, 1)), substring(period, 2), sep = "", collapse = " "),
"Returns - The Krause Fund"),
x        = "",
y        = paste(paste(toupper(substring(period, 1, 1)), substring(period, 2), sep = "", collapse = " "),
"Returns (%)")) +
geom_smooth(inherit.aes = FALSE, aes(x = date, y = Rc), method = "loess", level = FALSE, na.rm = TRUE,
size = 1.5, color = "orange1") +
theme(panel.background = element_rect(fill   = "black",
colour = "black",
size   = 0.5, linetype = "solid"),
panel.grid.major = element_line(size = 0.5, linetype = 'solid', colour = "gray50"),
panel.grid.minor = element_line(size = 0.25, linetype = 'solid', colour = "gray50")) +
geom_hline(aes(yintercept = 0), color = "ghostwhite", size = 0.8))
#scale_color_tq() +
#scale_y_continuous(labels = scales::percent))
# Plot individual stock returns
new.stock.returns <- add_column(stock.returns,  sign = ifelse(stock.returns[["Ra"]] >= 0, "positive", "negative"))
stock.list <- unique(new.stock.returns$symbol)
stock.sign <- new.stock.returns$sign
plots <- list()
for (i in seq_along(stock.list)) {
ggplot <-
(ggplot(subset(new.stock.returns, new.stock.returns$symbol == stock.list[i], new.stock.returns$sign == stock.sign),
aes(x = date, y = Ra)) +
geom_bar(stat = "identity", color = "black", alpha = 1, na.rm = TRUE) +
scale_fill_manual(values = c("positive" = "green", "negative" = "red")) +
labs(title = stock.list[i],
x = "", y = "") +
geom_smooth(inherit.aes = FALSE, aes(x = date, y = Ra), method = "loess", level = FALSE, na.rm = TRUE,
size = 1, color = "orange1") +
theme(panel.background = element_rect(fill   = "black",
colour = "black",
size   = 0.5, linetype = "solid"),
panel.grid.major = element_line(size = 0.5, linetype = 'solid', colour = "gray50"),
panel.grid.minor = element_line(size = 0.25, linetype = 'solid', colour = "gray50")) +
geom_hline(aes(yintercept = 0), color = "yellow", size = 0.8))
plots[[i]] <- ggplot
}
individuals <- plot_grid(plotlist = plots, ncol = 4, nrow = 3)
(list(individuals, plot, "Individual Performance" = RaRb, "Portfolio Performance" = RaRc))
}
krause(from="2017-01-01", period="weekly", index="SPY")
krause <- function(from, period, index) {
cal          <- create.calendar(name = "cal", weekdays = c("saturday", "sunday"))
date         <- preceding(Sys.Date(), cal)
symbols      <- c("ALGN", "BA", "CMI", "FLIR", "FNB", "GOOGL", "NFLX", "PXD", "STZ", "TMUS")
quote        <- (getQuote(symbols, src = "yahoo"))$Last
shares       <- c(245, 115.56465, 236.90199, 1117.84436, 3817.46965, 63, 210, 170, 210.75283, 530.0)
market.value <- (shares * quote)
total.mv     <- sum(market.value)
weights      <- market.value / (total.mv + 1880.18) # Weights do not sum to 1 due to unfactored money market investments
# Gather adjusted returns for each individual stock
stock.returns <- (tq_get(symbols,
get   = "stock.prices",
from  = from,
to    = date) %>%
group_by(symbol) %>%
tq_transmute(select     = adjusted,
mutate_fun = periodReturn,
period     = period,
col_rename = "Ra"))
# Gather adjusted index returns
index.returns <- (tq_get(index,
get   = "stock.prices",
from  = from,
to    = date) %>%
tq_transmute(select     = adjusted,
mutate_fun = periodReturn,
period     = period,
col_rename = "Rb"))
# Aggregate individual stocks into a portfolio; suppress warnings for weights not summing to 1
portfolio.returns <- suppressWarnings(((stock.returns %>%
tq_portfolio(assets_col  = symbol,
returns_col = Ra,
weights     = weights,
col_rename  = "Rc"))))
# Gather performance of each individual stocks compared to index
RaRb <- (left_join(stock.returns, index.returns, by = "date") %>%
tq_performance(Ra = Ra,
Rb = Rb,
performance_fun = table.CAPM))
# Gather performance of whole portfolio compared to index
RaRc <- (left_join(portfolio.returns, index.returns, by = "date") %>%
tq_performance(Ra = Rc,
Rb = Rb,
performance_fun = table.CAPM))
# Plot portfolio returns
plot <- (add_column(portfolio.returns,  sign = ifelse(portfolio.returns[["Rc"]] >= 0, "positive", "negative")) %>%
ggplot(aes(x = date, y = Rc, fill = sign)) +
geom_bar(stat = "identity", color = "black", alpha = 1, na.rm = TRUE) +
scale_fill_manual(values = c("positive" = "green", "negative" = "red")) +
guides(fill = FALSE) +
labs(title    = paste("Portfolio",
paste(toupper(substring(period, 1, 1)), substring(period, 2), sep = "", collapse = " "),
"Returns - The Krause Fund"),
x        = "",
y        = paste(paste(toupper(substring(period, 1, 1)), substring(period, 2), sep = "", collapse = " "),
"Returns (%)")) +
geom_smooth(inherit.aes = FALSE, aes(x = date, y = Rc), method = "loess", level = FALSE, na.rm = TRUE,
size = 1.5, color = "orange1") +
theme(panel.background = element_rect(fill   = "black",
colour = "black",
size   = 0.5, linetype = "solid"),
panel.grid.major = element_line(size = 0.5, linetype = 'solid', colour = "gray50"),
panel.grid.minor = element_line(size = 0.25, linetype = 'solid', colour = "gray50")) +
geom_hline(aes(yintercept = 0), color = "ghostwhite", size = 0.8))
#scale_color_tq() +
#scale_y_continuous(labels = scales::percent))
# Plot individual stock returns
new.stock.returns <- add_column(stock.returns,  sign = ifelse(stock.returns[["Ra"]] >= 0, "positive", "negative"))
stock.list <- unique(new.stock.returns$symbol)
stock.sign <- unique(new.stock.returns$sign)
plots <- list()
for (i in seq_along(stock.list)) {
ggplot <-
(ggplot(subset(new.stock.returns, new.stock.returns$symbol == stock.list[i], new.stock.returns$sign == stock.sign[i]),
aes(x = date, y = Ra)) +
geom_bar(stat = "identity", color = "black", alpha = 1, na.rm = TRUE) +
scale_fill_manual(values = c("positive" = "green", "negative" = "red")) +
labs(title = stock.list[i],
x = "", y = "") +
geom_smooth(inherit.aes = FALSE, aes(x = date, y = Ra), method = "loess", level = FALSE, na.rm = TRUE,
size = 1, color = "orange1") +
theme(panel.background = element_rect(fill   = "black",
colour = "black",
size   = 0.5, linetype = "solid"),
panel.grid.major = element_line(size = 0.5, linetype = 'solid', colour = "gray50"),
panel.grid.minor = element_line(size = 0.25, linetype = 'solid', colour = "gray50")) +
geom_hline(aes(yintercept = 0), color = "yellow", size = 0.8))
plots[[i]] <- ggplot
}
individuals <- plot_grid(plotlist = plots, ncol = 4, nrow = 3)
(list(individuals, plot, "Individual Performance" = RaRb, "Portfolio Performance" = RaRc))
}
krause(from="2017-01-01", period="weekly", index="SPY")
krause <- function(from, period, index) {
cal          <- create.calendar(name = "cal", weekdays = c("saturday", "sunday"))
date         <- preceding(Sys.Date(), cal)
symbols      <- c("ALGN", "BA", "CMI", "FLIR", "FNB", "GOOGL", "NFLX", "PXD", "STZ", "TMUS")
quote        <- (getQuote(symbols, src = "yahoo"))$Last
shares       <- c(245, 115.56465, 236.90199, 1117.84436, 3817.46965, 63, 210, 170, 210.75283, 530.0)
market.value <- (shares * quote)
total.mv     <- sum(market.value)
weights      <- market.value / (total.mv + 1880.18) # Weights do not sum to 1 due to unfactored money market investments
# Gather adjusted returns for each individual stock
stock.returns <- (tq_get(symbols,
get   = "stock.prices",
from  = from,
to    = date) %>%
group_by(symbol) %>%
tq_transmute(select     = adjusted,
mutate_fun = periodReturn,
period     = period,
col_rename = "Ra"))
# Gather adjusted index returns
index.returns <- (tq_get(index,
get   = "stock.prices",
from  = from,
to    = date) %>%
tq_transmute(select     = adjusted,
mutate_fun = periodReturn,
period     = period,
col_rename = "Rb"))
# Aggregate individual stocks into a portfolio; suppress warnings for weights not summing to 1
portfolio.returns <- suppressWarnings(((stock.returns %>%
tq_portfolio(assets_col  = symbol,
returns_col = Ra,
weights     = weights,
col_rename  = "Rc"))))
# Gather performance of each individual stocks compared to index
RaRb <- (left_join(stock.returns, index.returns, by = "date") %>%
tq_performance(Ra = Ra,
Rb = Rb,
performance_fun = table.CAPM))
# Gather performance of whole portfolio compared to index
RaRc <- (left_join(portfolio.returns, index.returns, by = "date") %>%
tq_performance(Ra = Rc,
Rb = Rb,
performance_fun = table.CAPM))
# Plot portfolio returns
plot <- (add_column(portfolio.returns,  sign = ifelse(portfolio.returns[["Rc"]] >= 0, "positive", "negative")) %>%
ggplot(aes(x = date, y = Rc, fill = sign)) +
geom_bar(stat = "identity", color = "black", alpha = 1, na.rm = TRUE) +
scale_fill_manual(values = c("positive" = "green", "negative" = "red")) +
guides(fill = FALSE) +
labs(title    = paste("Portfolio",
paste(toupper(substring(period, 1, 1)), substring(period, 2), sep = "", collapse = " "),
"Returns - The Krause Fund"),
x        = "",
y        = paste(paste(toupper(substring(period, 1, 1)), substring(period, 2), sep = "", collapse = " "),
"Returns (%)")) +
geom_smooth(inherit.aes = FALSE, aes(x = date, y = Rc), method = "loess", level = FALSE, na.rm = TRUE,
size = 1.5, color = "orange1") +
theme(panel.background = element_rect(fill   = "black",
colour = "black",
size   = 0.5, linetype = "solid"),
panel.grid.major = element_line(size = 0.5, linetype = 'solid', colour = "gray50"),
panel.grid.minor = element_line(size = 0.25, linetype = 'solid', colour = "gray50")) +
geom_hline(aes(yintercept = 0), color = "ghostwhite", size = 0.8))
#scale_color_tq() +
#scale_y_continuous(labels = scales::percent))
# Plot individual stock returns
stock.list <- unique(new.stock.returns$symbol)
plots <- list()
for (i in seq_along(stock.list)) {
ggplot <-
(ggplot(subset(stock.returns, stock.returns$symbol == stock.list[i]),
aes(x = date, y = Ra)) +
geom_bar(stat = "identity", color = "black", alpha = 1, na.rm = TRUE) +
labs(title = stock.list[i],
x = "", y = "") +
geom_smooth(method = "loess", level = FALSE, na.rm = TRUE, size = 1, color = "orange1") +
theme(panel.background = element_rect(fill   = "black",
colour = "black",
size   = 0.5, linetype = "solid"),
panel.grid.major = element_line(size = 0.5, linetype = 'solid', colour = "gray50"),
panel.grid.minor = element_line(size = 0.25, linetype = 'solid', colour = "gray50")) +
geom_hline(aes(yintercept = 0), color = "yellow", size = 0.8))
plots[[i]] <- ggplot
}
individuals <- plot_grid(plotlist = plots, ncol = 4, nrow = 3)
(list(individuals, plot, "Individual Performance" = RaRb, "Portfolio Performance" = RaRc))
}
krause(from="2017-01-01", period="weekly", index="SPY")
krause <- function(from, period, index) {
cal          <- create.calendar(name = "cal", weekdays = c("saturday", "sunday"))
date         <- preceding(Sys.Date(), cal)
symbols      <- c("ALGN", "BA", "CMI", "FLIR", "FNB", "GOOGL", "NFLX", "PXD", "STZ", "TMUS")
quote        <- (getQuote(symbols, src = "yahoo"))$Last
shares       <- c(245, 115.56465, 236.90199, 1117.84436, 3817.46965, 63, 210, 170, 210.75283, 530.0)
market.value <- (shares * quote)
total.mv     <- sum(market.value)
weights      <- market.value / (total.mv + 1880.18) # Weights do not sum to 1 due to unfactored money market investments
# Gather adjusted returns for each individual stock
stock.returns <- (tq_get(symbols,
get   = "stock.prices",
from  = from,
to    = date) %>%
group_by(symbol) %>%
tq_transmute(select     = adjusted,
mutate_fun = periodReturn,
period     = period,
col_rename = "Ra"))
# Gather adjusted index returns
index.returns <- (tq_get(index,
get   = "stock.prices",
from  = from,
to    = date) %>%
tq_transmute(select     = adjusted,
mutate_fun = periodReturn,
period     = period,
col_rename = "Rb"))
# Aggregate individual stocks into a portfolio; suppress warnings for weights not summing to 1
portfolio.returns <- suppressWarnings(((stock.returns %>%
tq_portfolio(assets_col  = symbol,
returns_col = Ra,
weights     = weights,
col_rename  = "Rc"))))
# Gather performance of each individual stocks compared to index
RaRb <- (left_join(stock.returns, index.returns, by = "date") %>%
tq_performance(Ra = Ra,
Rb = Rb,
performance_fun = table.CAPM))
# Gather performance of whole portfolio compared to index
RaRc <- (left_join(portfolio.returns, index.returns, by = "date") %>%
tq_performance(Ra = Rc,
Rb = Rb,
performance_fun = table.CAPM))
# Plot portfolio returns
plot <- (add_column(portfolio.returns,  sign = ifelse(portfolio.returns[["Rc"]] >= 0, "positive", "negative")) %>%
ggplot(aes(x = date, y = Rc, fill = sign)) +
geom_bar(stat = "identity", color = "black", alpha = 1, na.rm = TRUE) +
scale_fill_manual(values = c("positive" = "green", "negative" = "red")) +
guides(fill = FALSE) +
labs(title    = paste("Portfolio",
paste(toupper(substring(period, 1, 1)), substring(period, 2), sep = "", collapse = " "),
"Returns - The Krause Fund"),
x        = "",
y        = paste(paste(toupper(substring(period, 1, 1)), substring(period, 2), sep = "", collapse = " "),
"Returns (%)")) +
geom_smooth(inherit.aes = FALSE, aes(x = date, y = Rc), method = "loess", level = FALSE, na.rm = TRUE,
size = 1.5, color = "orange1") +
theme(panel.background = element_rect(fill   = "black",
colour = "black",
size   = 0.5, linetype = "solid"),
panel.grid.major = element_line(size = 0.5, linetype = 'solid', colour = "gray50"),
panel.grid.minor = element_line(size = 0.25, linetype = 'solid', colour = "gray50")) +
geom_hline(aes(yintercept = 0), color = "ghostwhite", size = 0.8))
#scale_color_tq() +
#scale_y_continuous(labels = scales::percent))
# Plot individual stock returns
stock.list <- unique(new.stock.returns$symbol)
plots <- list()
for (i in seq_along(stock.list)) {
ggplot <-
(ggplot(subset(stock.returns, stock.returns$symbol == stock.list[i]),
aes(x = date, y = Ra)) +
geom_line(color = "cyan", alpha = 1, na.rm = TRUE) +
labs(title = stock.list[i],
x = "", y = "") +
geom_smooth(method = "loess", level = FALSE, na.rm = TRUE, size = 1, color = "orange1") +
theme(panel.background = element_rect(fill   = "black",
colour = "black",
size   = 0.5, linetype = "solid"),
panel.grid.major = element_line(size = 0.5, linetype = 'solid', colour = "gray50"),
panel.grid.minor = element_line(size = 0.25, linetype = 'solid', colour = "gray50")) +
geom_hline(aes(yintercept = 0), color = "yellow", size = 0.8))
plots[[i]] <- ggplot
}
individuals <- plot_grid(plotlist = plots, ncol = 4, nrow = 3)
(list(individuals, plot, "Individual Performance" = RaRb, "Portfolio Performance" = RaRc))
}
krause(from="2017-01-01", period="weekly", index="SPY")
